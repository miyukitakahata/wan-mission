
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `message_logs` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model message_logs
 * 
 */
export type message_logsModel = runtime.Types.Result.DefaultSelection<Prisma.$message_logsPayload>

export type AggregateMessage_logs = {
  _count: Message_logsCountAggregateOutputType | null
  _avg: Message_logsAvgAggregateOutputType | null
  _sum: Message_logsSumAggregateOutputType | null
  _min: Message_logsMinAggregateOutputType | null
  _max: Message_logsMaxAggregateOutputType | null
}

export type Message_logsAvgAggregateOutputType = {
  id: number | null
}

export type Message_logsSumAggregateOutputType = {
  id: number | null
}

export type Message_logsMinAggregateOutputType = {
  id: number | null
  user_id: string | null
  content: string | null
  is_llm_based: boolean | null
  created_at: Date | null
}

export type Message_logsMaxAggregateOutputType = {
  id: number | null
  user_id: string | null
  content: string | null
  is_llm_based: boolean | null
  created_at: Date | null
}

export type Message_logsCountAggregateOutputType = {
  id: number
  user_id: number
  content: number
  is_llm_based: number
  created_at: number
  _all: number
}


export type Message_logsAvgAggregateInputType = {
  id?: true
}

export type Message_logsSumAggregateInputType = {
  id?: true
}

export type Message_logsMinAggregateInputType = {
  id?: true
  user_id?: true
  content?: true
  is_llm_based?: true
  created_at?: true
}

export type Message_logsMaxAggregateInputType = {
  id?: true
  user_id?: true
  content?: true
  is_llm_based?: true
  created_at?: true
}

export type Message_logsCountAggregateInputType = {
  id?: true
  user_id?: true
  content?: true
  is_llm_based?: true
  created_at?: true
  _all?: true
}

export type Message_logsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which message_logs to aggregate.
   */
  where?: Prisma.message_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of message_logs to fetch.
   */
  orderBy?: Prisma.message_logsOrderByWithRelationInput | Prisma.message_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.message_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` message_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` message_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned message_logs
  **/
  _count?: true | Message_logsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Message_logsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Message_logsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Message_logsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Message_logsMaxAggregateInputType
}

export type GetMessage_logsAggregateType<T extends Message_logsAggregateArgs> = {
      [P in keyof T & keyof AggregateMessage_logs]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMessage_logs[P]>
    : Prisma.GetScalarType<T[P], AggregateMessage_logs[P]>
}




export type message_logsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.message_logsWhereInput
  orderBy?: Prisma.message_logsOrderByWithAggregationInput | Prisma.message_logsOrderByWithAggregationInput[]
  by: Prisma.Message_logsScalarFieldEnum[] | Prisma.Message_logsScalarFieldEnum
  having?: Prisma.message_logsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Message_logsCountAggregateInputType | true
  _avg?: Message_logsAvgAggregateInputType
  _sum?: Message_logsSumAggregateInputType
  _min?: Message_logsMinAggregateInputType
  _max?: Message_logsMaxAggregateInputType
}

export type Message_logsGroupByOutputType = {
  id: number
  user_id: string
  content: string | null
  is_llm_based: boolean | null
  created_at: Date | null
  _count: Message_logsCountAggregateOutputType | null
  _avg: Message_logsAvgAggregateOutputType | null
  _sum: Message_logsSumAggregateOutputType | null
  _min: Message_logsMinAggregateOutputType | null
  _max: Message_logsMaxAggregateOutputType | null
}

type GetMessage_logsGroupByPayload<T extends message_logsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Message_logsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Message_logsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Message_logsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Message_logsGroupByOutputType[P]>
      }
    >
  > 



export type message_logsWhereInput = {
  AND?: Prisma.message_logsWhereInput | Prisma.message_logsWhereInput[]
  OR?: Prisma.message_logsWhereInput[]
  NOT?: Prisma.message_logsWhereInput | Prisma.message_logsWhereInput[]
  id?: Prisma.IntFilter<"message_logs"> | number
  user_id?: Prisma.StringFilter<"message_logs"> | string
  content?: Prisma.StringNullableFilter<"message_logs"> | string | null
  is_llm_based?: Prisma.BoolNullableFilter<"message_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"message_logs"> | Date | string | null
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
}

export type message_logsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  is_llm_based?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  user?: Prisma.usersOrderByWithRelationInput
}

export type message_logsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.message_logsWhereInput | Prisma.message_logsWhereInput[]
  OR?: Prisma.message_logsWhereInput[]
  NOT?: Prisma.message_logsWhereInput | Prisma.message_logsWhereInput[]
  user_id?: Prisma.StringFilter<"message_logs"> | string
  content?: Prisma.StringNullableFilter<"message_logs"> | string | null
  is_llm_based?: Prisma.BoolNullableFilter<"message_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"message_logs"> | Date | string | null
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
}, "id">

export type message_logsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  is_llm_based?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.message_logsCountOrderByAggregateInput
  _avg?: Prisma.message_logsAvgOrderByAggregateInput
  _max?: Prisma.message_logsMaxOrderByAggregateInput
  _min?: Prisma.message_logsMinOrderByAggregateInput
  _sum?: Prisma.message_logsSumOrderByAggregateInput
}

export type message_logsScalarWhereWithAggregatesInput = {
  AND?: Prisma.message_logsScalarWhereWithAggregatesInput | Prisma.message_logsScalarWhereWithAggregatesInput[]
  OR?: Prisma.message_logsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.message_logsScalarWhereWithAggregatesInput | Prisma.message_logsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"message_logs"> | number
  user_id?: Prisma.StringWithAggregatesFilter<"message_logs"> | string
  content?: Prisma.StringNullableWithAggregatesFilter<"message_logs"> | string | null
  is_llm_based?: Prisma.BoolNullableWithAggregatesFilter<"message_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"message_logs"> | Date | string | null
}

export type message_logsCreateInput = {
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
  user: Prisma.usersCreateNestedOneWithoutMessage_logsInput
}

export type message_logsUncheckedCreateInput = {
  id?: number
  user_id: string
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
}

export type message_logsUpdateInput = {
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user?: Prisma.usersUpdateOneRequiredWithoutMessage_logsNestedInput
}

export type message_logsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type message_logsCreateManyInput = {
  id?: number
  user_id: string
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
}

export type message_logsUpdateManyMutationInput = {
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type message_logsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Message_logsListRelationFilter = {
  every?: Prisma.message_logsWhereInput
  some?: Prisma.message_logsWhereInput
  none?: Prisma.message_logsWhereInput
}

export type message_logsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type message_logsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  content?: Prisma.SortOrder
  is_llm_based?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type message_logsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type message_logsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  content?: Prisma.SortOrder
  is_llm_based?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type message_logsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  content?: Prisma.SortOrder
  is_llm_based?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type message_logsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type message_logsCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput> | Prisma.message_logsCreateWithoutUserInput[] | Prisma.message_logsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.message_logsCreateOrConnectWithoutUserInput | Prisma.message_logsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.message_logsCreateManyUserInputEnvelope
  connect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
}

export type message_logsUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput> | Prisma.message_logsCreateWithoutUserInput[] | Prisma.message_logsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.message_logsCreateOrConnectWithoutUserInput | Prisma.message_logsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.message_logsCreateManyUserInputEnvelope
  connect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
}

export type message_logsUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput> | Prisma.message_logsCreateWithoutUserInput[] | Prisma.message_logsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.message_logsCreateOrConnectWithoutUserInput | Prisma.message_logsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.message_logsUpsertWithWhereUniqueWithoutUserInput | Prisma.message_logsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.message_logsCreateManyUserInputEnvelope
  set?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  disconnect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  delete?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  connect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  update?: Prisma.message_logsUpdateWithWhereUniqueWithoutUserInput | Prisma.message_logsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.message_logsUpdateManyWithWhereWithoutUserInput | Prisma.message_logsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.message_logsScalarWhereInput | Prisma.message_logsScalarWhereInput[]
}

export type message_logsUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput> | Prisma.message_logsCreateWithoutUserInput[] | Prisma.message_logsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.message_logsCreateOrConnectWithoutUserInput | Prisma.message_logsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.message_logsUpsertWithWhereUniqueWithoutUserInput | Prisma.message_logsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.message_logsCreateManyUserInputEnvelope
  set?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  disconnect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  delete?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  connect?: Prisma.message_logsWhereUniqueInput | Prisma.message_logsWhereUniqueInput[]
  update?: Prisma.message_logsUpdateWithWhereUniqueWithoutUserInput | Prisma.message_logsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.message_logsUpdateManyWithWhereWithoutUserInput | Prisma.message_logsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.message_logsScalarWhereInput | Prisma.message_logsScalarWhereInput[]
}

export type message_logsCreateWithoutUserInput = {
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
}

export type message_logsUncheckedCreateWithoutUserInput = {
  id?: number
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
}

export type message_logsCreateOrConnectWithoutUserInput = {
  where: Prisma.message_logsWhereUniqueInput
  create: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput>
}

export type message_logsCreateManyUserInputEnvelope = {
  data: Prisma.message_logsCreateManyUserInput | Prisma.message_logsCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type message_logsUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.message_logsWhereUniqueInput
  update: Prisma.XOR<Prisma.message_logsUpdateWithoutUserInput, Prisma.message_logsUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.message_logsCreateWithoutUserInput, Prisma.message_logsUncheckedCreateWithoutUserInput>
}

export type message_logsUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.message_logsWhereUniqueInput
  data: Prisma.XOR<Prisma.message_logsUpdateWithoutUserInput, Prisma.message_logsUncheckedUpdateWithoutUserInput>
}

export type message_logsUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.message_logsScalarWhereInput
  data: Prisma.XOR<Prisma.message_logsUpdateManyMutationInput, Prisma.message_logsUncheckedUpdateManyWithoutUserInput>
}

export type message_logsScalarWhereInput = {
  AND?: Prisma.message_logsScalarWhereInput | Prisma.message_logsScalarWhereInput[]
  OR?: Prisma.message_logsScalarWhereInput[]
  NOT?: Prisma.message_logsScalarWhereInput | Prisma.message_logsScalarWhereInput[]
  id?: Prisma.IntFilter<"message_logs"> | number
  user_id?: Prisma.StringFilter<"message_logs"> | string
  content?: Prisma.StringNullableFilter<"message_logs"> | string | null
  is_llm_based?: Prisma.BoolNullableFilter<"message_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"message_logs"> | Date | string | null
}

export type message_logsCreateManyUserInput = {
  id?: number
  content?: string | null
  is_llm_based?: boolean | null
  created_at?: Date | string | null
}

export type message_logsUpdateWithoutUserInput = {
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type message_logsUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type message_logsUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_llm_based?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type message_logsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  content?: boolean
  is_llm_based?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["message_logs"]>

export type message_logsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  content?: boolean
  is_llm_based?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["message_logs"]>

export type message_logsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  content?: boolean
  is_llm_based?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["message_logs"]>

export type message_logsSelectScalar = {
  id?: boolean
  user_id?: boolean
  content?: boolean
  is_llm_based?: boolean
  created_at?: boolean
}

export type message_logsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "content" | "is_llm_based" | "created_at", ExtArgs["result"]["message_logs"]>
export type message_logsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}
export type message_logsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}
export type message_logsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}

export type $message_logsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "message_logs"
  objects: {
    user: Prisma.$usersPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    user_id: string
    content: string | null
    is_llm_based: boolean | null
    created_at: Date | null
  }, ExtArgs["result"]["message_logs"]>
  composites: {}
}

export type message_logsGetPayload<S extends boolean | null | undefined | message_logsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$message_logsPayload, S>

export type message_logsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<message_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Message_logsCountAggregateInputType | true
  }

export interface message_logsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['message_logs'], meta: { name: 'message_logs' } }
  /**
   * Find zero or one Message_logs that matches the filter.
   * @param {message_logsFindUniqueArgs} args - Arguments to find a Message_logs
   * @example
   * // Get one Message_logs
   * const message_logs = await prisma.message_logs.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends message_logsFindUniqueArgs>(args: Prisma.SelectSubset<T, message_logsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Message_logs that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {message_logsFindUniqueOrThrowArgs} args - Arguments to find a Message_logs
   * @example
   * // Get one Message_logs
   * const message_logs = await prisma.message_logs.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends message_logsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, message_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Message_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsFindFirstArgs} args - Arguments to find a Message_logs
   * @example
   * // Get one Message_logs
   * const message_logs = await prisma.message_logs.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends message_logsFindFirstArgs>(args?: Prisma.SelectSubset<T, message_logsFindFirstArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Message_logs that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsFindFirstOrThrowArgs} args - Arguments to find a Message_logs
   * @example
   * // Get one Message_logs
   * const message_logs = await prisma.message_logs.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends message_logsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, message_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Message_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Message_logs
   * const message_logs = await prisma.message_logs.findMany()
   * 
   * // Get first 10 Message_logs
   * const message_logs = await prisma.message_logs.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const message_logsWithIdOnly = await prisma.message_logs.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends message_logsFindManyArgs>(args?: Prisma.SelectSubset<T, message_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Message_logs.
   * @param {message_logsCreateArgs} args - Arguments to create a Message_logs.
   * @example
   * // Create one Message_logs
   * const Message_logs = await prisma.message_logs.create({
   *   data: {
   *     // ... data to create a Message_logs
   *   }
   * })
   * 
   */
  create<T extends message_logsCreateArgs>(args: Prisma.SelectSubset<T, message_logsCreateArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Message_logs.
   * @param {message_logsCreateManyArgs} args - Arguments to create many Message_logs.
   * @example
   * // Create many Message_logs
   * const message_logs = await prisma.message_logs.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends message_logsCreateManyArgs>(args?: Prisma.SelectSubset<T, message_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Message_logs and returns the data saved in the database.
   * @param {message_logsCreateManyAndReturnArgs} args - Arguments to create many Message_logs.
   * @example
   * // Create many Message_logs
   * const message_logs = await prisma.message_logs.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Message_logs and only return the `id`
   * const message_logsWithIdOnly = await prisma.message_logs.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends message_logsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, message_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Message_logs.
   * @param {message_logsDeleteArgs} args - Arguments to delete one Message_logs.
   * @example
   * // Delete one Message_logs
   * const Message_logs = await prisma.message_logs.delete({
   *   where: {
   *     // ... filter to delete one Message_logs
   *   }
   * })
   * 
   */
  delete<T extends message_logsDeleteArgs>(args: Prisma.SelectSubset<T, message_logsDeleteArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Message_logs.
   * @param {message_logsUpdateArgs} args - Arguments to update one Message_logs.
   * @example
   * // Update one Message_logs
   * const message_logs = await prisma.message_logs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends message_logsUpdateArgs>(args: Prisma.SelectSubset<T, message_logsUpdateArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Message_logs.
   * @param {message_logsDeleteManyArgs} args - Arguments to filter Message_logs to delete.
   * @example
   * // Delete a few Message_logs
   * const { count } = await prisma.message_logs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends message_logsDeleteManyArgs>(args?: Prisma.SelectSubset<T, message_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Message_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Message_logs
   * const message_logs = await prisma.message_logs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends message_logsUpdateManyArgs>(args: Prisma.SelectSubset<T, message_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Message_logs and returns the data updated in the database.
   * @param {message_logsUpdateManyAndReturnArgs} args - Arguments to update many Message_logs.
   * @example
   * // Update many Message_logs
   * const message_logs = await prisma.message_logs.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Message_logs and only return the `id`
   * const message_logsWithIdOnly = await prisma.message_logs.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends message_logsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, message_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Message_logs.
   * @param {message_logsUpsertArgs} args - Arguments to update or create a Message_logs.
   * @example
   * // Update or create a Message_logs
   * const message_logs = await prisma.message_logs.upsert({
   *   create: {
   *     // ... data to create a Message_logs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Message_logs we want to update
   *   }
   * })
   */
  upsert<T extends message_logsUpsertArgs>(args: Prisma.SelectSubset<T, message_logsUpsertArgs<ExtArgs>>): Prisma.Prisma__message_logsClient<runtime.Types.Result.GetResult<Prisma.$message_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Message_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsCountArgs} args - Arguments to filter Message_logs to count.
   * @example
   * // Count the number of Message_logs
   * const count = await prisma.message_logs.count({
   *   where: {
   *     // ... the filter for the Message_logs we want to count
   *   }
   * })
  **/
  count<T extends message_logsCountArgs>(
    args?: Prisma.Subset<T, message_logsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Message_logsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Message_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Message_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Message_logsAggregateArgs>(args: Prisma.Subset<T, Message_logsAggregateArgs>): Prisma.PrismaPromise<GetMessage_logsAggregateType<T>>

  /**
   * Group by Message_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {message_logsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends message_logsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: message_logsGroupByArgs['orderBy'] }
      : { orderBy?: message_logsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, message_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessage_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the message_logs model
 */
readonly fields: message_logsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for message_logs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__message_logsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.usersDefaultArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the message_logs model
 */
export interface message_logsFieldRefs {
  readonly id: Prisma.FieldRef<"message_logs", 'Int'>
  readonly user_id: Prisma.FieldRef<"message_logs", 'String'>
  readonly content: Prisma.FieldRef<"message_logs", 'String'>
  readonly is_llm_based: Prisma.FieldRef<"message_logs", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"message_logs", 'DateTime'>
}
    

// Custom InputTypes
/**
 * message_logs findUnique
 */
export type message_logsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter, which message_logs to fetch.
   */
  where: Prisma.message_logsWhereUniqueInput
}

/**
 * message_logs findUniqueOrThrow
 */
export type message_logsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter, which message_logs to fetch.
   */
  where: Prisma.message_logsWhereUniqueInput
}

/**
 * message_logs findFirst
 */
export type message_logsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter, which message_logs to fetch.
   */
  where?: Prisma.message_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of message_logs to fetch.
   */
  orderBy?: Prisma.message_logsOrderByWithRelationInput | Prisma.message_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for message_logs.
   */
  cursor?: Prisma.message_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` message_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` message_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of message_logs.
   */
  distinct?: Prisma.Message_logsScalarFieldEnum | Prisma.Message_logsScalarFieldEnum[]
}

/**
 * message_logs findFirstOrThrow
 */
export type message_logsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter, which message_logs to fetch.
   */
  where?: Prisma.message_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of message_logs to fetch.
   */
  orderBy?: Prisma.message_logsOrderByWithRelationInput | Prisma.message_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for message_logs.
   */
  cursor?: Prisma.message_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` message_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` message_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of message_logs.
   */
  distinct?: Prisma.Message_logsScalarFieldEnum | Prisma.Message_logsScalarFieldEnum[]
}

/**
 * message_logs findMany
 */
export type message_logsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter, which message_logs to fetch.
   */
  where?: Prisma.message_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of message_logs to fetch.
   */
  orderBy?: Prisma.message_logsOrderByWithRelationInput | Prisma.message_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing message_logs.
   */
  cursor?: Prisma.message_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` message_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` message_logs.
   */
  skip?: number
  distinct?: Prisma.Message_logsScalarFieldEnum | Prisma.Message_logsScalarFieldEnum[]
}

/**
 * message_logs create
 */
export type message_logsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * The data needed to create a message_logs.
   */
  data: Prisma.XOR<Prisma.message_logsCreateInput, Prisma.message_logsUncheckedCreateInput>
}

/**
 * message_logs createMany
 */
export type message_logsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many message_logs.
   */
  data: Prisma.message_logsCreateManyInput | Prisma.message_logsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * message_logs createManyAndReturn
 */
export type message_logsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * The data used to create many message_logs.
   */
  data: Prisma.message_logsCreateManyInput | Prisma.message_logsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * message_logs update
 */
export type message_logsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * The data needed to update a message_logs.
   */
  data: Prisma.XOR<Prisma.message_logsUpdateInput, Prisma.message_logsUncheckedUpdateInput>
  /**
   * Choose, which message_logs to update.
   */
  where: Prisma.message_logsWhereUniqueInput
}

/**
 * message_logs updateMany
 */
export type message_logsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update message_logs.
   */
  data: Prisma.XOR<Prisma.message_logsUpdateManyMutationInput, Prisma.message_logsUncheckedUpdateManyInput>
  /**
   * Filter which message_logs to update
   */
  where?: Prisma.message_logsWhereInput
  /**
   * Limit how many message_logs to update.
   */
  limit?: number
}

/**
 * message_logs updateManyAndReturn
 */
export type message_logsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * The data used to update message_logs.
   */
  data: Prisma.XOR<Prisma.message_logsUpdateManyMutationInput, Prisma.message_logsUncheckedUpdateManyInput>
  /**
   * Filter which message_logs to update
   */
  where?: Prisma.message_logsWhereInput
  /**
   * Limit how many message_logs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * message_logs upsert
 */
export type message_logsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * The filter to search for the message_logs to update in case it exists.
   */
  where: Prisma.message_logsWhereUniqueInput
  /**
   * In case the message_logs found by the `where` argument doesn't exist, create a new message_logs with this data.
   */
  create: Prisma.XOR<Prisma.message_logsCreateInput, Prisma.message_logsUncheckedCreateInput>
  /**
   * In case the message_logs was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.message_logsUpdateInput, Prisma.message_logsUncheckedUpdateInput>
}

/**
 * message_logs delete
 */
export type message_logsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
  /**
   * Filter which message_logs to delete.
   */
  where: Prisma.message_logsWhereUniqueInput
}

/**
 * message_logs deleteMany
 */
export type message_logsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which message_logs to delete
   */
  where?: Prisma.message_logsWhereInput
  /**
   * Limit how many message_logs to delete.
   */
  limit?: number
}

/**
 * message_logs without action
 */
export type message_logsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the message_logs
   */
  select?: Prisma.message_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the message_logs
   */
  omit?: Prisma.message_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.message_logsInclude<ExtArgs> | null
}
