
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `care_logs` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model care_logs
 * 
 */
export type care_logsModel = runtime.Types.Result.DefaultSelection<Prisma.$care_logsPayload>

export type AggregateCare_logs = {
  _count: Care_logsCountAggregateOutputType | null
  _avg: Care_logsAvgAggregateOutputType | null
  _sum: Care_logsSumAggregateOutputType | null
  _min: Care_logsMinAggregateOutputType | null
  _max: Care_logsMaxAggregateOutputType | null
}

export type Care_logsAvgAggregateOutputType = {
  id: number | null
  care_setting_id: number | null
}

export type Care_logsSumAggregateOutputType = {
  id: number | null
  care_setting_id: number | null
}

export type Care_logsMinAggregateOutputType = {
  id: number | null
  care_setting_id: number | null
  date: Date | null
  fed_morning: boolean | null
  fed_night: boolean | null
  created_at: Date | null
}

export type Care_logsMaxAggregateOutputType = {
  id: number | null
  care_setting_id: number | null
  date: Date | null
  fed_morning: boolean | null
  fed_night: boolean | null
  created_at: Date | null
}

export type Care_logsCountAggregateOutputType = {
  id: number
  care_setting_id: number
  date: number
  fed_morning: number
  fed_night: number
  created_at: number
  _all: number
}


export type Care_logsAvgAggregateInputType = {
  id?: true
  care_setting_id?: true
}

export type Care_logsSumAggregateInputType = {
  id?: true
  care_setting_id?: true
}

export type Care_logsMinAggregateInputType = {
  id?: true
  care_setting_id?: true
  date?: true
  fed_morning?: true
  fed_night?: true
  created_at?: true
}

export type Care_logsMaxAggregateInputType = {
  id?: true
  care_setting_id?: true
  date?: true
  fed_morning?: true
  fed_night?: true
  created_at?: true
}

export type Care_logsCountAggregateInputType = {
  id?: true
  care_setting_id?: true
  date?: true
  fed_morning?: true
  fed_night?: true
  created_at?: true
  _all?: true
}

export type Care_logsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which care_logs to aggregate.
   */
  where?: Prisma.care_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of care_logs to fetch.
   */
  orderBy?: Prisma.care_logsOrderByWithRelationInput | Prisma.care_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.care_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` care_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` care_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned care_logs
  **/
  _count?: true | Care_logsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Care_logsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Care_logsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Care_logsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Care_logsMaxAggregateInputType
}

export type GetCare_logsAggregateType<T extends Care_logsAggregateArgs> = {
      [P in keyof T & keyof AggregateCare_logs]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCare_logs[P]>
    : Prisma.GetScalarType<T[P], AggregateCare_logs[P]>
}




export type care_logsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.care_logsWhereInput
  orderBy?: Prisma.care_logsOrderByWithAggregationInput | Prisma.care_logsOrderByWithAggregationInput[]
  by: Prisma.Care_logsScalarFieldEnum[] | Prisma.Care_logsScalarFieldEnum
  having?: Prisma.care_logsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Care_logsCountAggregateInputType | true
  _avg?: Care_logsAvgAggregateInputType
  _sum?: Care_logsSumAggregateInputType
  _min?: Care_logsMinAggregateInputType
  _max?: Care_logsMaxAggregateInputType
}

export type Care_logsGroupByOutputType = {
  id: number
  care_setting_id: number
  date: Date | null
  fed_morning: boolean | null
  fed_night: boolean | null
  created_at: Date | null
  _count: Care_logsCountAggregateOutputType | null
  _avg: Care_logsAvgAggregateOutputType | null
  _sum: Care_logsSumAggregateOutputType | null
  _min: Care_logsMinAggregateOutputType | null
  _max: Care_logsMaxAggregateOutputType | null
}

type GetCare_logsGroupByPayload<T extends care_logsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Care_logsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Care_logsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Care_logsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Care_logsGroupByOutputType[P]>
      }
    >
  > 



export type care_logsWhereInput = {
  AND?: Prisma.care_logsWhereInput | Prisma.care_logsWhereInput[]
  OR?: Prisma.care_logsWhereInput[]
  NOT?: Prisma.care_logsWhereInput | Prisma.care_logsWhereInput[]
  id?: Prisma.IntFilter<"care_logs"> | number
  care_setting_id?: Prisma.IntFilter<"care_logs"> | number
  date?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
  fed_morning?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  fed_night?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
  care_setting?: Prisma.XOR<Prisma.Care_settingsScalarRelationFilter, Prisma.care_settingsWhereInput>
  walk_missions?: Prisma.Walk_missionsListRelationFilter
}

export type care_logsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
  date?: Prisma.SortOrderInput | Prisma.SortOrder
  fed_morning?: Prisma.SortOrderInput | Prisma.SortOrder
  fed_night?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  care_setting?: Prisma.care_settingsOrderByWithRelationInput
  walk_missions?: Prisma.walk_missionsOrderByRelationAggregateInput
}

export type care_logsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.care_logsWhereInput | Prisma.care_logsWhereInput[]
  OR?: Prisma.care_logsWhereInput[]
  NOT?: Prisma.care_logsWhereInput | Prisma.care_logsWhereInput[]
  care_setting_id?: Prisma.IntFilter<"care_logs"> | number
  date?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
  fed_morning?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  fed_night?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
  care_setting?: Prisma.XOR<Prisma.Care_settingsScalarRelationFilter, Prisma.care_settingsWhereInput>
  walk_missions?: Prisma.Walk_missionsListRelationFilter
}, "id">

export type care_logsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
  date?: Prisma.SortOrderInput | Prisma.SortOrder
  fed_morning?: Prisma.SortOrderInput | Prisma.SortOrder
  fed_night?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.care_logsCountOrderByAggregateInput
  _avg?: Prisma.care_logsAvgOrderByAggregateInput
  _max?: Prisma.care_logsMaxOrderByAggregateInput
  _min?: Prisma.care_logsMinOrderByAggregateInput
  _sum?: Prisma.care_logsSumOrderByAggregateInput
}

export type care_logsScalarWhereWithAggregatesInput = {
  AND?: Prisma.care_logsScalarWhereWithAggregatesInput | Prisma.care_logsScalarWhereWithAggregatesInput[]
  OR?: Prisma.care_logsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.care_logsScalarWhereWithAggregatesInput | Prisma.care_logsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"care_logs"> | number
  care_setting_id?: Prisma.IntWithAggregatesFilter<"care_logs"> | number
  date?: Prisma.DateTimeNullableWithAggregatesFilter<"care_logs"> | Date | string | null
  fed_morning?: Prisma.BoolNullableWithAggregatesFilter<"care_logs"> | boolean | null
  fed_night?: Prisma.BoolNullableWithAggregatesFilter<"care_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"care_logs"> | Date | string | null
}

export type care_logsCreateInput = {
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
  care_setting: Prisma.care_settingsCreateNestedOneWithoutCare_logsInput
  walk_missions?: Prisma.walk_missionsCreateNestedManyWithoutCare_logInput
}

export type care_logsUncheckedCreateInput = {
  id?: number
  care_setting_id: number
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
  walk_missions?: Prisma.walk_missionsUncheckedCreateNestedManyWithoutCare_logInput
}

export type care_logsUpdateInput = {
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  care_setting?: Prisma.care_settingsUpdateOneRequiredWithoutCare_logsNestedInput
  walk_missions?: Prisma.walk_missionsUpdateManyWithoutCare_logNestedInput
}

export type care_logsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  care_setting_id?: Prisma.IntFieldUpdateOperationsInput | number
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  walk_missions?: Prisma.walk_missionsUncheckedUpdateManyWithoutCare_logNestedInput
}

export type care_logsCreateManyInput = {
  id?: number
  care_setting_id: number
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
}

export type care_logsUpdateManyMutationInput = {
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type care_logsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  care_setting_id?: Prisma.IntFieldUpdateOperationsInput | number
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Care_logsListRelationFilter = {
  every?: Prisma.care_logsWhereInput
  some?: Prisma.care_logsWhereInput
  none?: Prisma.care_logsWhereInput
}

export type care_logsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type care_logsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  fed_morning?: Prisma.SortOrder
  fed_night?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type care_logsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
}

export type care_logsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  fed_morning?: Prisma.SortOrder
  fed_night?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type care_logsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  fed_morning?: Prisma.SortOrder
  fed_night?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type care_logsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  care_setting_id?: Prisma.SortOrder
}

export type Care_logsScalarRelationFilter = {
  is?: Prisma.care_logsWhereInput
  isNot?: Prisma.care_logsWhereInput
}

export type care_logsCreateNestedManyWithoutCare_settingInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput> | Prisma.care_logsCreateWithoutCare_settingInput[] | Prisma.care_logsUncheckedCreateWithoutCare_settingInput[]
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutCare_settingInput | Prisma.care_logsCreateOrConnectWithoutCare_settingInput[]
  createMany?: Prisma.care_logsCreateManyCare_settingInputEnvelope
  connect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
}

export type care_logsUncheckedCreateNestedManyWithoutCare_settingInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput> | Prisma.care_logsCreateWithoutCare_settingInput[] | Prisma.care_logsUncheckedCreateWithoutCare_settingInput[]
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutCare_settingInput | Prisma.care_logsCreateOrConnectWithoutCare_settingInput[]
  createMany?: Prisma.care_logsCreateManyCare_settingInputEnvelope
  connect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
}

export type care_logsUpdateManyWithoutCare_settingNestedInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput> | Prisma.care_logsCreateWithoutCare_settingInput[] | Prisma.care_logsUncheckedCreateWithoutCare_settingInput[]
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutCare_settingInput | Prisma.care_logsCreateOrConnectWithoutCare_settingInput[]
  upsert?: Prisma.care_logsUpsertWithWhereUniqueWithoutCare_settingInput | Prisma.care_logsUpsertWithWhereUniqueWithoutCare_settingInput[]
  createMany?: Prisma.care_logsCreateManyCare_settingInputEnvelope
  set?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  disconnect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  delete?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  connect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  update?: Prisma.care_logsUpdateWithWhereUniqueWithoutCare_settingInput | Prisma.care_logsUpdateWithWhereUniqueWithoutCare_settingInput[]
  updateMany?: Prisma.care_logsUpdateManyWithWhereWithoutCare_settingInput | Prisma.care_logsUpdateManyWithWhereWithoutCare_settingInput[]
  deleteMany?: Prisma.care_logsScalarWhereInput | Prisma.care_logsScalarWhereInput[]
}

export type care_logsUncheckedUpdateManyWithoutCare_settingNestedInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput> | Prisma.care_logsCreateWithoutCare_settingInput[] | Prisma.care_logsUncheckedCreateWithoutCare_settingInput[]
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutCare_settingInput | Prisma.care_logsCreateOrConnectWithoutCare_settingInput[]
  upsert?: Prisma.care_logsUpsertWithWhereUniqueWithoutCare_settingInput | Prisma.care_logsUpsertWithWhereUniqueWithoutCare_settingInput[]
  createMany?: Prisma.care_logsCreateManyCare_settingInputEnvelope
  set?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  disconnect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  delete?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  connect?: Prisma.care_logsWhereUniqueInput | Prisma.care_logsWhereUniqueInput[]
  update?: Prisma.care_logsUpdateWithWhereUniqueWithoutCare_settingInput | Prisma.care_logsUpdateWithWhereUniqueWithoutCare_settingInput[]
  updateMany?: Prisma.care_logsUpdateManyWithWhereWithoutCare_settingInput | Prisma.care_logsUpdateManyWithWhereWithoutCare_settingInput[]
  deleteMany?: Prisma.care_logsScalarWhereInput | Prisma.care_logsScalarWhereInput[]
}

export type care_logsCreateNestedOneWithoutWalk_missionsInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutWalk_missionsInput, Prisma.care_logsUncheckedCreateWithoutWalk_missionsInput>
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutWalk_missionsInput
  connect?: Prisma.care_logsWhereUniqueInput
}

export type care_logsUpdateOneRequiredWithoutWalk_missionsNestedInput = {
  create?: Prisma.XOR<Prisma.care_logsCreateWithoutWalk_missionsInput, Prisma.care_logsUncheckedCreateWithoutWalk_missionsInput>
  connectOrCreate?: Prisma.care_logsCreateOrConnectWithoutWalk_missionsInput
  upsert?: Prisma.care_logsUpsertWithoutWalk_missionsInput
  connect?: Prisma.care_logsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.care_logsUpdateToOneWithWhereWithoutWalk_missionsInput, Prisma.care_logsUpdateWithoutWalk_missionsInput>, Prisma.care_logsUncheckedUpdateWithoutWalk_missionsInput>
}

export type care_logsCreateWithoutCare_settingInput = {
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
  walk_missions?: Prisma.walk_missionsCreateNestedManyWithoutCare_logInput
}

export type care_logsUncheckedCreateWithoutCare_settingInput = {
  id?: number
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
  walk_missions?: Prisma.walk_missionsUncheckedCreateNestedManyWithoutCare_logInput
}

export type care_logsCreateOrConnectWithoutCare_settingInput = {
  where: Prisma.care_logsWhereUniqueInput
  create: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput>
}

export type care_logsCreateManyCare_settingInputEnvelope = {
  data: Prisma.care_logsCreateManyCare_settingInput | Prisma.care_logsCreateManyCare_settingInput[]
  skipDuplicates?: boolean
}

export type care_logsUpsertWithWhereUniqueWithoutCare_settingInput = {
  where: Prisma.care_logsWhereUniqueInput
  update: Prisma.XOR<Prisma.care_logsUpdateWithoutCare_settingInput, Prisma.care_logsUncheckedUpdateWithoutCare_settingInput>
  create: Prisma.XOR<Prisma.care_logsCreateWithoutCare_settingInput, Prisma.care_logsUncheckedCreateWithoutCare_settingInput>
}

export type care_logsUpdateWithWhereUniqueWithoutCare_settingInput = {
  where: Prisma.care_logsWhereUniqueInput
  data: Prisma.XOR<Prisma.care_logsUpdateWithoutCare_settingInput, Prisma.care_logsUncheckedUpdateWithoutCare_settingInput>
}

export type care_logsUpdateManyWithWhereWithoutCare_settingInput = {
  where: Prisma.care_logsScalarWhereInput
  data: Prisma.XOR<Prisma.care_logsUpdateManyMutationInput, Prisma.care_logsUncheckedUpdateManyWithoutCare_settingInput>
}

export type care_logsScalarWhereInput = {
  AND?: Prisma.care_logsScalarWhereInput | Prisma.care_logsScalarWhereInput[]
  OR?: Prisma.care_logsScalarWhereInput[]
  NOT?: Prisma.care_logsScalarWhereInput | Prisma.care_logsScalarWhereInput[]
  id?: Prisma.IntFilter<"care_logs"> | number
  care_setting_id?: Prisma.IntFilter<"care_logs"> | number
  date?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
  fed_morning?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  fed_night?: Prisma.BoolNullableFilter<"care_logs"> | boolean | null
  created_at?: Prisma.DateTimeNullableFilter<"care_logs"> | Date | string | null
}

export type care_logsCreateWithoutWalk_missionsInput = {
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
  care_setting: Prisma.care_settingsCreateNestedOneWithoutCare_logsInput
}

export type care_logsUncheckedCreateWithoutWalk_missionsInput = {
  id?: number
  care_setting_id: number
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
}

export type care_logsCreateOrConnectWithoutWalk_missionsInput = {
  where: Prisma.care_logsWhereUniqueInput
  create: Prisma.XOR<Prisma.care_logsCreateWithoutWalk_missionsInput, Prisma.care_logsUncheckedCreateWithoutWalk_missionsInput>
}

export type care_logsUpsertWithoutWalk_missionsInput = {
  update: Prisma.XOR<Prisma.care_logsUpdateWithoutWalk_missionsInput, Prisma.care_logsUncheckedUpdateWithoutWalk_missionsInput>
  create: Prisma.XOR<Prisma.care_logsCreateWithoutWalk_missionsInput, Prisma.care_logsUncheckedCreateWithoutWalk_missionsInput>
  where?: Prisma.care_logsWhereInput
}

export type care_logsUpdateToOneWithWhereWithoutWalk_missionsInput = {
  where?: Prisma.care_logsWhereInput
  data: Prisma.XOR<Prisma.care_logsUpdateWithoutWalk_missionsInput, Prisma.care_logsUncheckedUpdateWithoutWalk_missionsInput>
}

export type care_logsUpdateWithoutWalk_missionsInput = {
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  care_setting?: Prisma.care_settingsUpdateOneRequiredWithoutCare_logsNestedInput
}

export type care_logsUncheckedUpdateWithoutWalk_missionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  care_setting_id?: Prisma.IntFieldUpdateOperationsInput | number
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type care_logsCreateManyCare_settingInput = {
  id?: number
  date?: Date | string | null
  fed_morning?: boolean | null
  fed_night?: boolean | null
  created_at?: Date | string | null
}

export type care_logsUpdateWithoutCare_settingInput = {
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  walk_missions?: Prisma.walk_missionsUpdateManyWithoutCare_logNestedInput
}

export type care_logsUncheckedUpdateWithoutCare_settingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  walk_missions?: Prisma.walk_missionsUncheckedUpdateManyWithoutCare_logNestedInput
}

export type care_logsUncheckedUpdateManyWithoutCare_settingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  fed_morning?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  fed_night?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type Care_logsCountOutputType
 */

export type Care_logsCountOutputType = {
  walk_missions: number
}

export type Care_logsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  walk_missions?: boolean | Care_logsCountOutputTypeCountWalk_missionsArgs
}

/**
 * Care_logsCountOutputType without action
 */
export type Care_logsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Care_logsCountOutputType
   */
  select?: Prisma.Care_logsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Care_logsCountOutputType without action
 */
export type Care_logsCountOutputTypeCountWalk_missionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.walk_missionsWhereInput
}


export type care_logsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  care_setting_id?: boolean
  date?: boolean
  fed_morning?: boolean
  fed_night?: boolean
  created_at?: boolean
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
  walk_missions?: boolean | Prisma.care_logs$walk_missionsArgs<ExtArgs>
  _count?: boolean | Prisma.Care_logsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["care_logs"]>

export type care_logsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  care_setting_id?: boolean
  date?: boolean
  fed_morning?: boolean
  fed_night?: boolean
  created_at?: boolean
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["care_logs"]>

export type care_logsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  care_setting_id?: boolean
  date?: boolean
  fed_morning?: boolean
  fed_night?: boolean
  created_at?: boolean
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["care_logs"]>

export type care_logsSelectScalar = {
  id?: boolean
  care_setting_id?: boolean
  date?: boolean
  fed_morning?: boolean
  fed_night?: boolean
  created_at?: boolean
}

export type care_logsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "care_setting_id" | "date" | "fed_morning" | "fed_night" | "created_at", ExtArgs["result"]["care_logs"]>
export type care_logsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
  walk_missions?: boolean | Prisma.care_logs$walk_missionsArgs<ExtArgs>
  _count?: boolean | Prisma.Care_logsCountOutputTypeDefaultArgs<ExtArgs>
}
export type care_logsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
}
export type care_logsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  care_setting?: boolean | Prisma.care_settingsDefaultArgs<ExtArgs>
}

export type $care_logsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "care_logs"
  objects: {
    care_setting: Prisma.$care_settingsPayload<ExtArgs>
    walk_missions: Prisma.$walk_missionsPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    care_setting_id: number
    date: Date | null
    fed_morning: boolean | null
    fed_night: boolean | null
    created_at: Date | null
  }, ExtArgs["result"]["care_logs"]>
  composites: {}
}

export type care_logsGetPayload<S extends boolean | null | undefined | care_logsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$care_logsPayload, S>

export type care_logsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<care_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Care_logsCountAggregateInputType | true
  }

export interface care_logsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['care_logs'], meta: { name: 'care_logs' } }
  /**
   * Find zero or one Care_logs that matches the filter.
   * @param {care_logsFindUniqueArgs} args - Arguments to find a Care_logs
   * @example
   * // Get one Care_logs
   * const care_logs = await prisma.care_logs.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends care_logsFindUniqueArgs>(args: Prisma.SelectSubset<T, care_logsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Care_logs that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {care_logsFindUniqueOrThrowArgs} args - Arguments to find a Care_logs
   * @example
   * // Get one Care_logs
   * const care_logs = await prisma.care_logs.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends care_logsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, care_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Care_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsFindFirstArgs} args - Arguments to find a Care_logs
   * @example
   * // Get one Care_logs
   * const care_logs = await prisma.care_logs.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends care_logsFindFirstArgs>(args?: Prisma.SelectSubset<T, care_logsFindFirstArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Care_logs that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsFindFirstOrThrowArgs} args - Arguments to find a Care_logs
   * @example
   * // Get one Care_logs
   * const care_logs = await prisma.care_logs.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends care_logsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, care_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Care_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Care_logs
   * const care_logs = await prisma.care_logs.findMany()
   * 
   * // Get first 10 Care_logs
   * const care_logs = await prisma.care_logs.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const care_logsWithIdOnly = await prisma.care_logs.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends care_logsFindManyArgs>(args?: Prisma.SelectSubset<T, care_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Care_logs.
   * @param {care_logsCreateArgs} args - Arguments to create a Care_logs.
   * @example
   * // Create one Care_logs
   * const Care_logs = await prisma.care_logs.create({
   *   data: {
   *     // ... data to create a Care_logs
   *   }
   * })
   * 
   */
  create<T extends care_logsCreateArgs>(args: Prisma.SelectSubset<T, care_logsCreateArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Care_logs.
   * @param {care_logsCreateManyArgs} args - Arguments to create many Care_logs.
   * @example
   * // Create many Care_logs
   * const care_logs = await prisma.care_logs.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends care_logsCreateManyArgs>(args?: Prisma.SelectSubset<T, care_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Care_logs and returns the data saved in the database.
   * @param {care_logsCreateManyAndReturnArgs} args - Arguments to create many Care_logs.
   * @example
   * // Create many Care_logs
   * const care_logs = await prisma.care_logs.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Care_logs and only return the `id`
   * const care_logsWithIdOnly = await prisma.care_logs.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends care_logsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, care_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Care_logs.
   * @param {care_logsDeleteArgs} args - Arguments to delete one Care_logs.
   * @example
   * // Delete one Care_logs
   * const Care_logs = await prisma.care_logs.delete({
   *   where: {
   *     // ... filter to delete one Care_logs
   *   }
   * })
   * 
   */
  delete<T extends care_logsDeleteArgs>(args: Prisma.SelectSubset<T, care_logsDeleteArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Care_logs.
   * @param {care_logsUpdateArgs} args - Arguments to update one Care_logs.
   * @example
   * // Update one Care_logs
   * const care_logs = await prisma.care_logs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends care_logsUpdateArgs>(args: Prisma.SelectSubset<T, care_logsUpdateArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Care_logs.
   * @param {care_logsDeleteManyArgs} args - Arguments to filter Care_logs to delete.
   * @example
   * // Delete a few Care_logs
   * const { count } = await prisma.care_logs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends care_logsDeleteManyArgs>(args?: Prisma.SelectSubset<T, care_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Care_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Care_logs
   * const care_logs = await prisma.care_logs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends care_logsUpdateManyArgs>(args: Prisma.SelectSubset<T, care_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Care_logs and returns the data updated in the database.
   * @param {care_logsUpdateManyAndReturnArgs} args - Arguments to update many Care_logs.
   * @example
   * // Update many Care_logs
   * const care_logs = await prisma.care_logs.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Care_logs and only return the `id`
   * const care_logsWithIdOnly = await prisma.care_logs.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends care_logsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, care_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Care_logs.
   * @param {care_logsUpsertArgs} args - Arguments to update or create a Care_logs.
   * @example
   * // Update or create a Care_logs
   * const care_logs = await prisma.care_logs.upsert({
   *   create: {
   *     // ... data to create a Care_logs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Care_logs we want to update
   *   }
   * })
   */
  upsert<T extends care_logsUpsertArgs>(args: Prisma.SelectSubset<T, care_logsUpsertArgs<ExtArgs>>): Prisma.Prisma__care_logsClient<runtime.Types.Result.GetResult<Prisma.$care_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Care_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsCountArgs} args - Arguments to filter Care_logs to count.
   * @example
   * // Count the number of Care_logs
   * const count = await prisma.care_logs.count({
   *   where: {
   *     // ... the filter for the Care_logs we want to count
   *   }
   * })
  **/
  count<T extends care_logsCountArgs>(
    args?: Prisma.Subset<T, care_logsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Care_logsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Care_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Care_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Care_logsAggregateArgs>(args: Prisma.Subset<T, Care_logsAggregateArgs>): Prisma.PrismaPromise<GetCare_logsAggregateType<T>>

  /**
   * Group by Care_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {care_logsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends care_logsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: care_logsGroupByArgs['orderBy'] }
      : { orderBy?: care_logsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, care_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCare_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the care_logs model
 */
readonly fields: care_logsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for care_logs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__care_logsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  care_setting<T extends Prisma.care_settingsDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.care_settingsDefaultArgs<ExtArgs>>): Prisma.Prisma__care_settingsClient<runtime.Types.Result.GetResult<Prisma.$care_settingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  walk_missions<T extends Prisma.care_logs$walk_missionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.care_logs$walk_missionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$walk_missionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the care_logs model
 */
export interface care_logsFieldRefs {
  readonly id: Prisma.FieldRef<"care_logs", 'Int'>
  readonly care_setting_id: Prisma.FieldRef<"care_logs", 'Int'>
  readonly date: Prisma.FieldRef<"care_logs", 'DateTime'>
  readonly fed_morning: Prisma.FieldRef<"care_logs", 'Boolean'>
  readonly fed_night: Prisma.FieldRef<"care_logs", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"care_logs", 'DateTime'>
}
    

// Custom InputTypes
/**
 * care_logs findUnique
 */
export type care_logsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter, which care_logs to fetch.
   */
  where: Prisma.care_logsWhereUniqueInput
}

/**
 * care_logs findUniqueOrThrow
 */
export type care_logsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter, which care_logs to fetch.
   */
  where: Prisma.care_logsWhereUniqueInput
}

/**
 * care_logs findFirst
 */
export type care_logsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter, which care_logs to fetch.
   */
  where?: Prisma.care_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of care_logs to fetch.
   */
  orderBy?: Prisma.care_logsOrderByWithRelationInput | Prisma.care_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for care_logs.
   */
  cursor?: Prisma.care_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` care_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` care_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of care_logs.
   */
  distinct?: Prisma.Care_logsScalarFieldEnum | Prisma.Care_logsScalarFieldEnum[]
}

/**
 * care_logs findFirstOrThrow
 */
export type care_logsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter, which care_logs to fetch.
   */
  where?: Prisma.care_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of care_logs to fetch.
   */
  orderBy?: Prisma.care_logsOrderByWithRelationInput | Prisma.care_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for care_logs.
   */
  cursor?: Prisma.care_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` care_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` care_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of care_logs.
   */
  distinct?: Prisma.Care_logsScalarFieldEnum | Prisma.Care_logsScalarFieldEnum[]
}

/**
 * care_logs findMany
 */
export type care_logsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter, which care_logs to fetch.
   */
  where?: Prisma.care_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of care_logs to fetch.
   */
  orderBy?: Prisma.care_logsOrderByWithRelationInput | Prisma.care_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing care_logs.
   */
  cursor?: Prisma.care_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` care_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` care_logs.
   */
  skip?: number
  distinct?: Prisma.Care_logsScalarFieldEnum | Prisma.Care_logsScalarFieldEnum[]
}

/**
 * care_logs create
 */
export type care_logsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * The data needed to create a care_logs.
   */
  data: Prisma.XOR<Prisma.care_logsCreateInput, Prisma.care_logsUncheckedCreateInput>
}

/**
 * care_logs createMany
 */
export type care_logsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many care_logs.
   */
  data: Prisma.care_logsCreateManyInput | Prisma.care_logsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * care_logs createManyAndReturn
 */
export type care_logsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * The data used to create many care_logs.
   */
  data: Prisma.care_logsCreateManyInput | Prisma.care_logsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * care_logs update
 */
export type care_logsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * The data needed to update a care_logs.
   */
  data: Prisma.XOR<Prisma.care_logsUpdateInput, Prisma.care_logsUncheckedUpdateInput>
  /**
   * Choose, which care_logs to update.
   */
  where: Prisma.care_logsWhereUniqueInput
}

/**
 * care_logs updateMany
 */
export type care_logsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update care_logs.
   */
  data: Prisma.XOR<Prisma.care_logsUpdateManyMutationInput, Prisma.care_logsUncheckedUpdateManyInput>
  /**
   * Filter which care_logs to update
   */
  where?: Prisma.care_logsWhereInput
  /**
   * Limit how many care_logs to update.
   */
  limit?: number
}

/**
 * care_logs updateManyAndReturn
 */
export type care_logsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * The data used to update care_logs.
   */
  data: Prisma.XOR<Prisma.care_logsUpdateManyMutationInput, Prisma.care_logsUncheckedUpdateManyInput>
  /**
   * Filter which care_logs to update
   */
  where?: Prisma.care_logsWhereInput
  /**
   * Limit how many care_logs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * care_logs upsert
 */
export type care_logsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * The filter to search for the care_logs to update in case it exists.
   */
  where: Prisma.care_logsWhereUniqueInput
  /**
   * In case the care_logs found by the `where` argument doesn't exist, create a new care_logs with this data.
   */
  create: Prisma.XOR<Prisma.care_logsCreateInput, Prisma.care_logsUncheckedCreateInput>
  /**
   * In case the care_logs was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.care_logsUpdateInput, Prisma.care_logsUncheckedUpdateInput>
}

/**
 * care_logs delete
 */
export type care_logsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
  /**
   * Filter which care_logs to delete.
   */
  where: Prisma.care_logsWhereUniqueInput
}

/**
 * care_logs deleteMany
 */
export type care_logsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which care_logs to delete
   */
  where?: Prisma.care_logsWhereInput
  /**
   * Limit how many care_logs to delete.
   */
  limit?: number
}

/**
 * care_logs.walk_missions
 */
export type care_logs$walk_missionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the walk_missions
   */
  select?: Prisma.walk_missionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the walk_missions
   */
  omit?: Prisma.walk_missionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.walk_missionsInclude<ExtArgs> | null
  where?: Prisma.walk_missionsWhereInput
  orderBy?: Prisma.walk_missionsOrderByWithRelationInput | Prisma.walk_missionsOrderByWithRelationInput[]
  cursor?: Prisma.walk_missionsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Walk_missionsScalarFieldEnum | Prisma.Walk_missionsScalarFieldEnum[]
}

/**
 * care_logs without action
 */
export type care_logsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the care_logs
   */
  select?: Prisma.care_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the care_logs
   */
  omit?: Prisma.care_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.care_logsInclude<ExtArgs> | null
}
